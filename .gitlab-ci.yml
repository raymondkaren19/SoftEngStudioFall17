maven_build:
 stage: test
 image: maven:3.3.9-jdk-8
 script:
  - echo "Building project with maven"
  - mvn verify
 except:
  - schedules

deploy-to-staging:
 stage: deploy
 image: maven:3.3.9-jdk-8
 artifacts:
  paths:
   - target/*.war
 script:
  - echo "Deploy to staging server"
  - TOMCAT_HOST=$(ip route show | awk '/default/ {print $3}')
  - sed -i -e 's/'value=\"root\"'/'value=\"$MYSQL_USER_STAGING\"'/g' ./src/main/resources/META-INF/spring/datasource-tx-jpa.xml
  - sed -i -e 's/'value=\"mysql\"'/'value=\"$MYSQL_PASS_STAGING\"'/g' ./src/main/resources/META-INF/spring/datasource-tx-jpa.xml
  - mvn package
  - curl -T "target/inventorymanager-webapp.war" "http://tomcat:${TOMCAT_PASSWORD}@${TOMCAT_HOST}:8888/manager/text/deploy?path=/inventorymanager-webapp&update=true"
 environment:
  name: staging
  url: http://$(STAGING_HOST):8888/inventorymanager-webapp/
 only:
  - master
 except:
  - schedules

deploy-to-production:
 stage: deploy
 image: maven:3.3.9-jdk-8
 artifacts:
  paths:
   - target/*.war
 script:
  - echo "Deploy to production server"
  - sed -i -e 's/'value=\"root\"'/'value=\"$MYSQL_USER_PRODUCTION\"'/g' ./src/main/resources/META-INF/spring/datasource-tx-jpa.xml
  - sed -i -e 's/'value=\"mysql\"'/'value=\"$MYSQL_PASS_PRODUCTION\"'/g' ./src/main/resources/META-INF/spring/datasource-tx-jpa.xml
  - mvn package
  - curl -T "target/inventorymanager-webapp.war" "http://tomcat:${TOMCAT_PASS_DEPLOYMENT}@${PRODUCTION_HOST}/manager/text/deploy?path=/&update=true"
 environment:
  name: production
  url: http://$(PRODUCTION_HOST)/
 only:
  - master
 when: manual

deploy-to-sql-schema-to-staging:
 stage: deploy
 image: mysql:5.7
 script:
  - mysql -u $MYSQL_USER_STAGING -p$MYSQL_PASS_STAGING -h $STAGING_HOST < ./src/main/resources/META-INF/sql/schema.sql
 environment:
  name: sql/schema-staging
 only:
  - master
 when: manual

deploy-to-sql-schema-to-production:
 stage: deploy
 image: mysql:5.7
 script:
  - mysql -u $MYSQL_USER_PRODUCTION -p$MYSQL_PASS_PRODUCTION -h $PRODUCTION_HOST < ./src/main/resources/META-INF/sql/schema.sql
 environment:
  name: sql/schema-production
 only:
  - master
 when: manual

deploy-to-sql-insert-sample-data-to-staging:
 stage: deploy
 image: mysql:5.7
 script:
  - mysql -u $MYSQL_USER_STAGING -p$MYSQL_PASS_STAGING -h $STAGING_HOST < ./src/main/resources/META-INF/sql/test-data.sql
 environment:
  name: sql/insert-sample-data-staging
 only:
  - master
 when: manual

deploy-to-sql-insert-sample-data-to-production:
 stage: deploy
 image: mysql:5.7
 script:
  - mysql -u $MYSQL_USER_PRODUCTION -p$MYSQL_PASS_PRODUCTION -h $PRODUCTION_HOST < ./src/main/resources/META-INF/sql/test-data.sql
 environment:
  name: sql/insert-sample-data-production
 only:
  - master
 when: manual


test-connection-staging-tomcat-and-mysql-:
 stage: test
 image: mysql:5.7
 script:
  - apt-get update && apt-get -y install curl
  - curl --fail "http://tomcat:${TOMCAT_PASSWORD}@${TOMCAT_HOST}:8888/manager/status/all"
  - mysql -u $MYSQL_USER_STAGING -p$MYSQL_PASS_STAGING -h $STAGING_HOST
 environment:
  name: integration-test/connection-staging
 only:
  - master
  - schedules

test-connection-production-tomcat-and-mysql-:
 stage: test
 image: mysql:5.7
 script:
  - apt-get update && apt-get -y install curl
  - curl --fail "http://tomcat:${TOMCAT_PASS_DEPLOYMENT}@${PRODUCTION_HOST}/manager/status/all"
  - mysql -u $MYSQL_USER_PRODUCTION -p$MYSQL_PASS_PRODUCTION -h $PRODUCTION_HOST
 environment:
  name: integration-test/connection-production
 only:
  - master
  - schedules